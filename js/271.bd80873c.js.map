{"version":3,"file":"js/271.bd80873c.js","mappings":"+NACOA,MAAM,uB,GAEJA,MAAM,c,GAUNA,MAAM,mB,iBAWNA,MAAM,c,GAGJA,MAAM,Y,wEA1Bf,QAqCM,MArCN,EAqCM,C,aApCJ,QAAuB,UAAnB,kBAAc,KAClB,QAQM,MARN,EAQM,E,SAPJ,QAME,S,qCALS,EAAW,eACpBC,KAAK,OACLC,YAAY,2BACZF,MAAM,eACL,QAAK,oBAAE,EAAAG,aAAA,EAAAA,eAAA,K,iBAJC,EAAAC,kBAQb,QASM,MATN,EASM,G,aARJ,QAOS,mBANY,EAAAC,WAAZC,K,WADT,QAOS,UALNC,IAAKD,EACL,QAAK,GAAE,EAAAE,iBAAmBF,EAC1BN,OAAK,gCAA6B,EAAAQ,mBAAqBF,O,QAErDA,GAAW,MAAE,QAAG,EAAAG,iBAAiBH,IAAY,KAClD,Q,SAGF,QAMM,MANN,EAMM,G,aALJ,QAIM,mBAJc,EAAAI,cAARC,K,WAAZ,QAIM,OAJ8BJ,IAAKI,EAAKC,SAAUZ,MAAM,a,EAC5D,QAAyB,mBAAlBW,EAAKE,OAAK,IACjB,QAA2C,IAA3C,GAA2C,QAApBF,EAAKL,UAAQ,IACpC,QAAgF,UAAvE,QAAK,GAAE,EAAAQ,SAASH,EAAKC,UAAWZ,MAAM,YAAW,gBAAa,S,QAIhE,EAAmB,sB,WAA9B,QAKM,O,MAL0BA,MAAM,gBAAiB,QAAK,oBAAE,EAAAe,YAAA,EAAAA,cAAA,K,EAC5D,QAGM,OAHDf,MAAM,gBAAiB,QAAK,qBAAN,OAAW,Y,EACpC,QAAwD,UAA/C,QAAK,oBAAE,EAAAe,YAAA,EAAAA,cAAA,IAAYf,MAAM,aAAY,MAC9C,QAAwD,OAAnD,UAAQ,EAAAgB,oBAAqBhB,MAAM,W,8CAShD,SACEiB,KAAM,gBACN,IAAAC,GACE,MAAO,CACLC,SAAU,GACVT,cAAe,GACfF,iBAAkB,MAClBJ,YAAa,GACbY,oBAAqB,KACrBX,WAAY,CAAC,OAEjB,EACA,aAAMe,GACJC,KAAKF,eAAiB,IAAaG,cACnCD,KAAKX,cAAgBW,KAAKF,SAG1B,MAAMI,EAAmB,IAAI,IAAIC,IAAIH,KAAKF,SAASM,IAAId,GAAQA,EAAKL,YACpEe,KAAKhB,WAAa,CAAC,SAAUkB,EAAiBG,OAChD,EACAC,QAAS,CACP,WAAAxB,GACE,IAAIyB,EAAQP,KAAKF,SAGa,QAA1BE,KAAKb,mBACPoB,EAAQA,EAAMC,OAAOlB,GAAQA,EAAKL,WAAae,KAAKb,mBAIlDa,KAAKjB,YAAY0B,SACnBF,EAAQ,IAAaG,YAAYH,EAAOP,KAAKjB,cAG/CiB,KAAKX,cAAgBkB,CACvB,EACA,gBAAAnB,CAAiBH,GACf,MAAiB,QAAbA,EACKe,KAAKF,SAASa,OAEhBX,KAAKF,SAASU,OAAOlB,GAAQA,EAAKL,WAAaA,GAAU0B,MAClE,EACA,cAAMlB,CAASF,GACb,IACE,MAAMqB,QAAgB,IAAaC,gBAAgBtB,GACnDS,KAAKL,oBAAsB,IAAamB,eAAeF,EACzD,CAAE,MAAOG,GACPC,QAAQD,MAAM,sBAAuBA,GACrCf,KAAKL,oBAAsB,sDAC7B,CACF,EACA,UAAAD,GACEM,KAAKL,oBAAsB,IAC7B,GAEFsB,MAAO,CACL,gBAAA9B,GACEa,KAAKlB,aACP,I,aC/FJ,MAAMoC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,G","sources":["webpack://smartbook-turkey-syria-earthquake/./src/views/AnalysisPages.vue","webpack://smartbook-turkey-syria-earthquake/./src/views/AnalysisPages.vue?f943"],"sourcesContent":["<template>\n  <div class=\"analysis-pages-view\">\n    <h1>Analysis Pages</h1>\n    <div class=\"search-bar\">\n      <input \n        v-model=\"searchQuery\" \n        type=\"text\" \n        placeholder=\"Search analysis pages...\" \n        class=\"search-input\"\n        @input=\"filterPages\"\n      />\n    </div>\n    \n    <div class=\"category-filter\">\n      <button \n        v-for=\"category in categories\" \n        :key=\"category\"\n        @click=\"selectedCategory = category\"\n        :class=\"['category-btn', { active: selectedCategory === category }]\"\n      >\n        {{ category }} ({{ getCategoryCount(category) }})\n      </button>\n    </div>\n\n    <div class=\"pages-grid\">\n      <div v-for=\"page in filteredPages\" :key=\"page.filename\" class=\"page-item\">\n        <h3>{{ page.title }}</h3>\n        <p class=\"category\">{{ page.category }}</p>\n        <button @click=\"loadPage(page.filename)\" class=\"load-btn\">View Analysis</button>\n      </div>\n    </div>\n    \n    <div v-if=\"selectedPageContent\" class=\"modal-overlay\" @click=\"closeModal\">\n      <div class=\"modal-content\" @click.stop>\n        <button @click=\"closeModal\" class=\"close-btn\">Ã—</button>\n        <div v-html=\"selectedPageContent\" class=\"content\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PagesService from '@/services/pagesService'\n\nexport default {\n  name: 'AnalysisPages',\n  data() {\n    return {\n      allPages: [],\n      filteredPages: [],\n      selectedCategory: 'All',\n      searchQuery: '',\n      selectedPageContent: null,\n      categories: ['All']\n    }\n  },\n  async mounted() {\n    this.allPages = await PagesService.getAllPages()\n    this.filteredPages = this.allPages\n    \n    // Extract unique categories\n    const uniqueCategories = [...new Set(this.allPages.map(page => page.category))]\n    this.categories = ['All', ...uniqueCategories.sort()]\n  },\n  methods: {\n    filterPages() {\n      let pages = this.allPages\n      \n      // Filter by category\n      if (this.selectedCategory !== 'All') {\n        pages = pages.filter(page => page.category === this.selectedCategory)\n      }\n      \n      // Filter by search query\n      if (this.searchQuery.trim()) {\n        pages = PagesService.searchPages(pages, this.searchQuery)\n      }\n      \n      this.filteredPages = pages\n    },\n    getCategoryCount(category) {\n      if (category === 'All') {\n        return this.allPages.length\n      }\n      return this.allPages.filter(page => page.category === category).length\n    },\n    async loadPage(filename) {\n      try {\n        const content = await PagesService.loadPageContent(filename)\n        this.selectedPageContent = PagesService.markdownToHtml(content)\n      } catch (error) {\n        console.error('Error loading page:', error)\n        this.selectedPageContent = '<p>Error loading page content. Please try again.</p>'\n      }\n    },\n    closeModal() {\n      this.selectedPageContent = null\n    }\n  },\n  watch: {\n    selectedCategory() {\n      this.filterPages()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.analysis-pages-view {\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.search-bar {\n  margin-bottom: 20px;\n}\n\n.search-input {\n  width: 100%;\n  padding: 12px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.category-filter {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 30px;\n}\n\n.category-btn {\n  padding: 8px 16px;\n  border: 1px solid #007bff;\n  background: white;\n  color: #007bff;\n  border-radius: 20px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 14px;\n}\n\n.category-btn:hover {\n  background: #007bff;\n  color: white;\n}\n\n.category-btn.active {\n  background: #007bff;\n  color: white;\n}\n\n.pages-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n}\n\n.page-item {\n  padding: 20px;\n  border: 1px solid #eee;\n  border-radius: 8px;\n  background: white;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  transition: transform 0.2s ease;\n}\n\n.page-item:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0,0,0,0.15);\n}\n\n.page-item h3 {\n  margin: 0 0 10px 0;\n  color: #333;\n  font-size: 1.1em;\n  line-height: 1.4;\n}\n\n.category {\n  color: #666;\n  font-size: 14px;\n  margin: 0 0 15px 0;\n  font-weight: 500;\n}\n\n.load-btn {\n  background-color: #28a745;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: 500;\n}\n\n.load-btn:hover {\n  background-color: #218838;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0,0,0,0.8);\n  z-index: 1000;\n  overflow-y: auto;\n  padding: 20px;\n}\n\n.modal-content {\n  background: white;\n  padding: 30px;\n  border-radius: 8px;\n  max-width: 800px;\n  margin: 0 auto;\n  position: relative;\n}\n\n.close-btn {\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  background: #dc3545;\n  color: white;\n  border: none;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  font-size: 18px;\n  cursor: pointer;\n}\n\n.close-btn:hover {\n  background: #c82333;\n}\n\n.content {\n  line-height: 1.6;\n}\n\n@media (max-width: 768px) {\n  .pages-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .category-filter {\n    justify-content: flex-start;\n  }\n}\n</style>\n","import { render } from \"./AnalysisPages.vue?vue&type=template&id=4c1af378&scoped=true\"\nimport script from \"./AnalysisPages.vue?vue&type=script&lang=js\"\nexport * from \"./AnalysisPages.vue?vue&type=script&lang=js\"\n\nimport \"./AnalysisPages.vue?vue&type=style&index=0&id=4c1af378&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1af378\"]])\n\nexport default __exports__"],"names":["class","type","placeholder","filterPages","searchQuery","categories","category","key","selectedCategory","getCategoryCount","filteredPages","page","filename","title","loadPage","closeModal","selectedPageContent","name","data","allPages","mounted","this","getAllPages","uniqueCategories","Set","map","sort","methods","pages","filter","trim","searchPages","length","content","loadPageContent","markdownToHtml","error","console","watch","__exports__","render"],"sourceRoot":""}